// ------------------------------------------------------------
// 4.26 UAC Standard ammo
// ------------------------------------------------------------
class FourMilAmmo:Ammo{
	default{
		+solid
		+inventory.ignoreskill
		inventory.maxamount 128;
		ammo.backpackmaxamount 128;
		ammo.backpackamount 0;
		xscale 0.5; yscale 0.6; height 2; radius 2; translation "ice";
	}
	override bool cancollidewith(actor other,bool passive){return other.bpickup||HDPickerUpper(other);}
	override string pickupmessage(){
		string pms="Picked up a stray 4.26 UAC Standard round.";
		if(amount>1)pms="Picked up a stray block of 4.26 UAC Standard rounds.";
		pms.appendformat("\nNOTE:  %s",HDCONST_426MAGMSG);
		return pms;
	}
	override void postbeginplay(){
		super.postbeginplay();
		if(owner)return;
		if(amount==1)return;
		int amm=min(amount,random(1,12));
		while(amount>amm){
			int ld=min(amount,random(1,12));
			actor a=spawn("FourMilAmmo",pos);
			a.vel+=vel+(frandom(-1,1),frandom(-1,1),frandom(-1,1));
			a.angle=frandom(0,360);
			inventory(a).amount=ld;
			amount-=ld;
		}if(amount<1)destroy();
		scale.y*=amount*0.5;
	}
	states{
	spawn:
		RBRS A -1;
		stop;
	}
}
class HD4mMag:HDMagAmmo{
	default{
		//$Category "Ammo/Hideous Destructor/"
		//$Title "4.26mm UAC Standard Mag"
		//$Sprite "CLIPB0"

		hdmagammo.maxperunit 51;
		hdmagammo.roundtype "FourMilAmmo";
		hdmagammo.roundbulk ENC_426_LOADED;
		hdmagammo.magbulk ENC_426MAG_EMPTY;
		hdmagammo.nicename "4.26 UAC Standard Magazines";
		inventory.maxamount 9;
		inventory.pickupmessage "Picked up a 4.26 UAC Standard magazine.";
	}
	override void postbeginplay(){
		super.postbeginplay();
		sealtimer=0;
	}
	int sealtimer;
	override void doeffect(){
		if(sealtimer>0)sealtimer--;
		super.doeffect();
	}
	override string pickupmessage(){
		string pms="Picked up a 4.26 UAC Standard magazine.";
		if(mags[0]<51)pms.appendformat(" %s",HDCONST_426MAGMSG);
		return pms;
	}
	bool DirtyMagsOnly(){
		for(int i=0;i<amount;i++){
			if(mags[i]>=51)return false;
		}
		return true;
	}
	override bool Extract(){
		SyncAmount();
		int mindex=mags.size()-1;
		if(
			mags.size()<1
			||mags[mindex]<1
			||owner.A_JumpIfInventory(roundtype,0,"null")
		)return false;
		if(mags[mindex]>=51){
			if(sealtimer<1){
				owner.A_Log(string.format("%s\nDo you really want to do that?",HDCONST_426MAGMSG),true);
				sealtimer=10;
				return false;
			}else{
				mags[mindex]=50;
				owner.A_PlaySound("weapons/rifleclick",CHAN_WEAPON);
				return false;
			}
		}
		int totake=random(1,min(
			mags[mindex],
			HDMath.MaxInv(owner,"FourMilAmmo")-owner.countinv("FourMilAmmo"))
		);
		HDF.Give(owner,roundtype,totake);
		owner.A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		owner.A_PlaySound("weapons/rockreload",CHAN_BODY,0.4);
		mags[mindex]-=totake;
		return true;
	}
	override bool Insert(){
		if(owner.countinv('SteadyHand') == 0) { owner.GiveInventory('SteadyHand', 1); }
		let sh = SteadyHand(owner.FindInventory('SteadyHand'));
		SyncAmount();
		if(
			mags[mags.size()-1]>=50
			||!owner.countinv(roundtype)
		)return false;
		owner.A_TakeInventory(roundtype,1,TIF_NOTAKEINFINITE);
		owner.A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
		if(random(1,100) <= sh.breakChance){
			owner.A_PlaySound("weapons/bigcrack",CHAN_BODY);
			owner.A_SpawnItemEx("HDSmokeChunk",12,0,owner.height-12,4,frandom(-2,2),frandom(2,4));
			owner.damagemobj(self,owner,1,"Thermal",DMG_NO_ARMOR);
			return false;
		}
		owner.A_PlaySound("weapons/pocket",CHAN_BODY,frandom(0.1,0.6));
		mags[mags.size()-1]++;
		sh.breakChance += 10;
		return true;
	}
	override void Consolidate(){
		SyncAmount();
		if(amount<2)return;
		int totalrounds=0;
		for(int i=0;i<amount;i++){
			if(mags[i]>=50)continue;
			totalrounds+=mags[i];
			mags[i]=0; //keep the empties, do NOT call clear()!
		}
		for(int i=0;i<amount;i++){
			if(mags[i]>=50)continue;
			int toinsert=min(50,totalrounds)*frandom(0.9,1.);
			mags[i]=toinsert;
			totalrounds-=toinsert;
			if(totalrounds<1)break;
		}
	}
	states(actor){
	spawn:
		ZMAG AB -1 nodelay{
			if(mags[0]<51)frame=1;
		}stop;
	spawnempty:
		ZMAG C -1{
			brollsprite=true;brollcenter=true;
			roll=randompick(0,0,0,0,2,2,2,2,1,3)*90;
		}stop;
	}
}



class ZM66DroppedRound:HDDebris{
	default{
		projectile;
		+cannotpush +forcexybillboard -nogravity +doombounce +bounceonactors
		xscale 0.5; yscale 0.6; height 2; radius 2; translation "ice";
		damagefunction(0);bouncefactor 0.2;seesound "misc/casing3";
	}
	states{
	spawn:
		RBRS A 2 A_SetAngle(angle+45);
		wait;
	death:
		---- A -1{
			inventory bl=inventory(spawn("FourMilAmmo",pos));
			bl.amount=1;bl.angle=angle;
			destroy();
		}
	}
}
class HD4mmMagEmpty:IdleDummy{
	override void postbeginplay(){
		super.postbeginplay();
		HDMagAmmo.SpawnMag(self,"HD4mMag",0);
		destroy();
	}
}

class SteadyHand : Inventory {
	int breakChance;
	override void DoEffect() {
		super.DoEffect();
		breakChance = max(breakChance - 1, 1);
	}
}