// ------------------------------------------------------------
// SMG
// ------------------------------------------------------------
class HDSMG:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "SMG"
		//$Sprite "SMGNA0"

		obituary "%o was soaked by %k's pea stream.";
		weapon.selectionorder 24;
		weapon.slotnumber 2;
		weapon.kickback 30;
		weapon.bobrangex 0.3;
		weapon.bobrangey 0.6;
		weapon.bobspeed 2.5;
		scale 0.55;
		inventory.pickupmessage "You got the SMG!";
		hdweapon.barrelsize 26,0.5,1;
	}
	override double gunmass(){
		return 5+(weaponstatus[SMGS_MAG]<0)?-0.5:(weaponstatus[SMGS_MAG]*0.02);
	}
	override double,int weaponbulk(){
		int mg=weaponstatus[SMGS_MAG];
		if(mg<0)return 120-ENC_9MAG30_LOADED;
		else return 120+mg*ENC_9_LOADED,USE_9;
	}
	override void postbeginplay(){
		super.postbeginplay();
		if(owner&&owner.player)weaponstatus[SMGS_AUTO]=clamp(
			cvar.getcvar("hd_smgfiremode",owner.player).getint(),
			0,2
		);
	}
	states{
	select0:
		SMGG A 0;
		goto select0small;
	deselect0:
		SMGG A 0;
		goto deselect0small;

	ready:
		SMGG A 1{
			A_SetCrosshair(21);
			invoker.weaponstatus[SMGS_RATCHET]=0;
			A_WeaponReady(WRF_ALL);
		}
		goto readyend;
	user3:
		---- A 0 A_MagManager("HD9mMag30");
		goto ready;
	altfire:
	althold:
		goto nope;
	hold:
		SMGG A 0{
			if(
				//full auto
				invoker.weaponstatus[SMGS_AUTO]==2
			)setweaponstate("fire2");
			else if(
				//burst
				invoker.weaponstatus[SMGS_AUTO]<1
				||invoker.weaponstatus[SMGS_RATCHET]>2
			)setweaponstate("nope");
		}goto fire;
	user2:
	firemode:
		---- A 1{
			int aut=invoker.weaponstatus[SMGS_AUTO];
			if(aut>=2)invoker.weaponstatus[SMGS_AUTO]=0;
			else if(aut<0)invoker.weaponstatus[SMGS_AUTO]=0;
			else invoker.weaponstatus[SMGS_AUTO]++;
		}goto nope;
	fire:
		SMGG A 1;
	fire2:
		SMGG B 1{
			if(invoker.weaponstatus[SMGS_CHAMBER]==2){
				A_GunFlash();
			}else{
				if(invoker.weaponstatus[SMGS_MAG]>0)setweaponstate("chamber");
				else setweaponstate("nope");
			}
		}
		SMGG A 1;
		SMGG A 0{
			if(invoker.weaponstatus[SMGS_CHAMBER]==1){
				A_SpawnItemEx("HDSpent9mm",
					cos(pitch)*10,0,height-8-sin(pitch)*10,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				invoker.weaponstatus[SMGS_CHAMBER]=0;
			}
			if(invoker.weaponstatus[SMGS_MAG]>0){
				invoker.weaponstatus[SMGS_MAG]--;
				invoker.weaponstatus[SMGS_CHAMBER]=2;
			}
			if(invoker.weaponstatus[SMGS_AUTO]==2)A_SetTics(1);
		}
		SMGG A 0 A_ReFire();
		goto ready;
	flash:
		SMGG B 0{
			actor p=spawn("HDBullet9",pos+(0,0,height-6));
			p.target=self;p.angle=angle;p.pitch=pitch;
			p.speed=440;
			p.vel+=(
				frandom(-1.,1.),frandom(-1.,1.),frandom(-1.,1.)
			);
			p.vel+=self.vel;

			A_ZoomFactor(0.995,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
			A_PlaySound("weapons/smg",CHAN_WEAPON);
			invoker.weaponstatus[SMGS_RATCHET]++;
			invoker.weaponstatus[SMGS_CHAMBER]=1;
		}
		SMGF A 1 bright{
			HDFlashAlpha(-200);
			A_Light1();
		}
		TNT1 A 0{
			A_Light0();
			A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		}
		TNT1 AA 1 A_MuzzleClimb(-frandom(0.4,0.6),-frandom(0.5,0.8));
		stop;


	unloadchamber:
		SMGG B 4 A_JumpIf(invoker.weaponstatus[SMGS_CHAMBER]<1,"nope");
		SMGG B 10{
			class<actor>which=invoker.weaponstatus[SMGS_CHAMBER]>1?"HDPistolAmmo":"HDSpent9mm";
			invoker.weaponstatus[SMGS_CHAMBER]=0;
			A_SpawnItemEx(which,
				cos(pitch)*10,0,height-8-sin(pitch)*10,
				vel.x,vel.y,vel.z,
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
		}goto readyend;
	loadchamber:
		---- A 0 A_JumpIf(invoker.weaponstatus[SMGS_CHAMBER]>0,"nope");
		---- A 0 A_JumpIf(!countinv("HDPistolAmmo"),"nope");
		---- A 1 offset(0,34) A_PlaySound("weapons/pocket",CHAN_WEAPON);
		---- A 1 offset(2,36);
		SMGG B 1 offset(5,40);
		SMGG B 4 offset(4,39){
			if(countinv("HDPistolAmmo")){
				A_TakeInventory("HDPistolAmmo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[SMGS_CHAMBER]=2;
				A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);
			}
		}
		SMGG B 7 offset(5,37);
		SMGG B 1 offset(2,36);
		SMGG A 1 offset(0,34);
		goto readyend;
	user4:
	unload:
		SMGG A 0{
			invoker.weaponstatus[0]|=SMGF_JUSTUNLOAD;
			if(
				invoker.weaponstatus[SMGS_MAG]>=0
			)setweaponstate("unmag");
			else if(invoker.weaponstatus[SMGS_CHAMBER]>0)setweaponstate("unloadchamber");
		}goto nope;
	reload:
		SMGG A 0{
			invoker.weaponstatus[0]&=~SMGF_JUSTUNLOAD;
			if(invoker.weaponstatus[SMGS_MAG]>=30)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"HD9mMag30")){
				if(
					invoker.weaponstatus[SMGS_MAG]<0
					&&countinv("HDPistolAmmo")
				)setweaponstate("loadchamber");
				else setweaponstate("nope");
			}
		}goto unmag;
	unmag:
		SMGG A 1 offset(0,34) A_SetCrosshair(21);
		SMGG A 1 offset(5,38);
		SMGG A 1 offset(10,42);
		SMGG B 2 offset(20,46) A_PlaySound("weapons/rifleclick",CHAN_WEAPON);
		SMGG B 4 offset(30,52){
			A_MuzzleClimb(0.3,0.4);
			A_PlaySound("weapons/rifleload",CHAN_WEAPON);
		}
		SMGG B 0{
			int magamt=invoker.weaponstatus[SMGS_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[SMGS_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HD9mMag30",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HD9mMag30",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HD9mMag30",magamt);
				A_PlaySound("weapons/pocket",CHAN_WEAPON);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		SMGG BB 7 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	magout:
		SMGG B 0{
			if(invoker.weaponstatus[0]&SMGF_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		SMGG B 0 A_PlaySound("weapons/pocket",CHAN_WEAPON);
		SMGG B 6 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		SMGG B 7 offset(34,52) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		SMGG B 10 offset(32,50);
		SMGG B 3 offset(32,49){
			let mmm=hdmagammo(findinventory("HD9mMag30"));
			if(mmm){
				invoker.weaponstatus[SMGS_MAG]=mmm.TakeMag(true);
				A_PlaySound("weapons/rifleclick",CHAN_BODY);
			}
			if(
				invoker.weaponstatus[SMGS_MAG]<1
				||invoker.weaponstatus[SMGS_CHAMBER]>0
			)setweaponstate("reloadend");
		}
	chamber:
		SMGG B 2 offset(33,50){
			invoker.weaponstatus[SMGS_MAG]--;
			invoker.weaponstatus[SMGS_CHAMBER]=2;
		}
		SMGG B 4 offset(32,49) A_PlaySound("weapons/rifleclick2",CHAN_WEAPON);

	reloadend:
		SMGG B 3 offset(30,52);
		SMGG B 2 offset(20,46);
		SMGG A 1 offset(10,42);
		SMGG A 1 offset(5,38);
		SMGG A 1 offset(0,34);
		goto nope;


	zoom:
		SMGG A 0 FindRange();
		goto nope;
	spawn:
		SMGN A -1 nodelay{
			if(invoker.weaponstatus[SMGS_MAG]<0)frame=1;
		}
	}
	override void initializewepstats(bool idfa){
		weaponstatus[0]=0;
		weaponstatus[SMGS_MAG]=30;
		weaponstatus[SMGS_CHAMBER]=2;
		if(!idfa)weaponstatus[SMGS_AUTO]=0;
	}
}
enum smgstatus{
	SMGF_JUSTUNLOAD=1,

	SMGS_FLAGS=0,
	SMGS_MAG=1,
	SMGS_CHAMBER=2, //0 empty, 1 spent, 2 loaded
	SMGS_AUTO=3, //0 semi, 1 burst, 2 auto
	SMGS_RATCHET=4,
};
